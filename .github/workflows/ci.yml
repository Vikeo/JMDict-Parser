name: Build and Publishs

on:
  create:
    branches:
      - release/**
  push:
    branches:
      - main
      - develop
      - release/**
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SOLUTION: JMDict.sln

    steps:
      - uses: actions/checkout@v3

      - name: Get Build Version
        id: get_version
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/release/"* ]]; then
            echo "VERSION=$(echo ${GITHUB_REF#refs/heads/release/})" >> $GITHUB_ENV
          else
            echo "VERSION=1.0.0" >> $GITHUB_ENV
          fi

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.1.1

      - name: Restore dependencies
        run: nuget restore $SOLUTION

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Build
        run: dotnet build /p:Version=${{ env.VERSION }} $SOLUTION --configuration Release --no-restore

      # - name: Publish
      #   if: startsWith(github.ref, 'refs/heads/release')
      #   id: publish
      #   run: nuget push **/*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{ secrets.NUGET_API_KEY }}
      #   env:
      #     NUGET_VERSION: ${{ env.VERSION }}

      - name: Publish (mock)
        if: startsWith(github.ref, 'refs/heads/release')
        id: publish
        run: echo "Package published successfully."
        env:
          NUGET_VERSION: ${{ env.VERSION }}

      - name: Check publish success and create release
        if: success() && startsWith(github.ref, 'refs/heads/release')
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: env.NUGET_VERSION,
              name: `Release ${env.NUGET_VERSION}`,
              body: `Release ${env.NUGET_VERSION} is now available at https://www.nuget.org/packages/<PACKAGE_NAME>/${env.NUGET_VERSION}`,
              draft: false,
              prerelease: false,
            });
            console.log(response.data.html_url);
