name: Build and Publish

on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SOLUTION: JMDict.sln

    steps:
      - uses: actions/checkout@v3

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.1.1

      - name: Restore dependencies
        run: nuget restore $SOLUTION

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Get Build Version
        id: get_version
        run: |
          if [[ "${{ github.event.pull_request.head.ref }}" == "release/"* ]]; then
            echo "VERSION=$(echo ${GITHUB_REF#refs/heads/release/})" >> $GITHUB_ENV
          else
            echo "VERSION=1.0.0" >> $GITHUB_ENV
          fi

      - name: Build
        run: dotnet build /p:Version=${{ env.VERSION }} $SOLUTION --configuration Release --no-restore

      - name: Publish
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && startsWith(github.head_ref, 'release/')
        id: publish
        run: nuget push **/*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{ secrets.NUGET_API_KEY }}
        env:
          NUGET_VERSION: ${{ env.VERSION }}

      - name: Create Release
        if: success() && github.event_name == 'pull_request' && github.event.action == 'closed' && startsWith(github.head_ref, 'release/')
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.JMDICT_GITHUB_TOKEN }}
        with:
          body: Release ${{ env.VERSION }} is now available at https://www.nuget.org/packages/JMDict/${{ env.VERSION }}
          draft: false
          prerelease: false
          name: Release ${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
